#!/usr/bin/env perl

use strict;
use warnings;
use FindBin qw($Bin);
use lib ( -d "$Bin/../lib/perl5" ? "$Bin/../lib/perl5" : "$Bin/../lib" );
use Log::Log4perl qw(:easy :levels);
use Try::Tiny;
use Pod::Usage;
use Getopt::Long qw(:config pass_through);

use npg_warehouse::loader::elembio::run_info;
use WTSI::DNAP::Warehouse::Schema;

our $VERSION = '0';

my $help = 0;
GetOptions(q(help) => \$help);
if ($help) { pod2usage(); }

my $layout = '%d %-5p %c - %m%n';
my $level  = $INFO;
Log::Log4perl->easy_init({layout => $layout,
                          level  => $level,
                          utf8   => 1});

if (defined $ENV{dev} && $ENV{dev}) {
  INFO(join q[ ], q[Using], $ENV{dev}, q[ml warehouse database]);
}

if (@ARGV) {

  my $is_loaded = 0;
  try {
    my $loader = npg_warehouse::loader::elembio::run_info->new_with_options();
    INFO('Loading run parameters for ' . $loader->runfolder_path);
    $is_loaded = $loader->load();
  } catch {
    FATAL($_);
    exit 1;
  };
  $is_loaded ? INFO('Loading completed') : WARN('Loading aborted');

} else {

  INFO('Batch mode, will read a list of run folders from STDIN');

  my $schema = WTSI::DNAP::Warehouse::Schema->connect();
  my $num_loaded = my $num_errors = my $num_skipped = 0;
  while ( my $path = <> ) {
    chomp $path;
    $path or next;
    INFO("Loading run parameters for $path");
    try {
      my $loader = npg_warehouse::loader::elembio::run_info->new(
        runfolder_path => $path,
        schema_wh=> $schema
      );
      my $is_loaded = $loader->load();
      $is_loaded ? $num_loaded++ : $num_skipped++;
      $is_loaded ? INFO('Loading completed') : WARN('Loading aborted');
    } catch {
      ERROR($_);
      $num_errors++;
    };
  }

  INFO("Loaded - $num_loaded, skipped - $num_skipped, errors - $num_errors");

  exit 1 if $num_errors;
}

exit 0;

__END__

=head1 NAME

npg_elembio_run_params2mlwarehouse

=head1 SYNOPSIS

Script to load JSON files with Elembio run parameters and stats and the
dates for the start and end of the run to ml warehouse.

If a run folder directory path is given as C<--runfolder_path> argument, the
script reads available files and loads them to ml warehouse database. The script
exist with an exit code 1 in case of any error during reading or uploading
the data. The fact that the script exited normally does not mean that the
data has been loaded since some of the run folders are technical in nature
and contain no data. The script reports whether the data was loaded or loading
was skipped.

If no argument is provided, the script waits for a list of run folder directory
paths to be supplied from STDIN. For individual run folders the functionality
is the same as when the script is called with the C<--runfolder_path> argument.
The errors in loading are reported, but the script does not exit, it moves to
the next run folder. If even a single error is recorded, the script exist with
an exit code 1.

=head1 DESCRIPTION

=head1 USAGE

 npg_elembio_run_params2mlwarehouse --runfolder_path [RUN_FOLDER_PATH]

 echo [PATH] | npg_elembio_run_params2mlwarehouse

=head1 REQUIRED ARGUMENTS

=head1 OPTIONS

  --help           brief help message
  --runfolder_path directory path of the Elembio runfolder

=head1 EXIT STATUS

0 if exited normally

1 if a fatal error occured

=head1 CONFIGURATION

=head1 DIAGNOSTICS

=head1 DEPENDENCIES

=over

=item strict

=item warnings

=item lib

=item FindBin

=item Try::Tiny

=item Pod::Usage

=item Getopt::Long

=item Log::Log4perl

=item npg_warehouse::loader::elembio::run_info

=item WTSI::DNAP::Warehouse::Schema

=back

=head1 INCOMPATIBILITIES

=head1 BUGS AND LIMITATIONS

=head1 AUTHOR

Marina Gourtovaia E<lt>mg8@sanger.ac.ukE<gt>

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2025 Genome Research Ltd.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
